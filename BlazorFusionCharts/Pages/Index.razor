@page "/"
@using Microsoft.JSInterop;
@using System.Text.Json;
@inject IJSRuntime JSInterop;
@inject FusionChartsService fusionChartsService;
@using System.Net.Http;
@inject HttpClient httpClient;
@inject NavigationManager navigationManager;
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager
@using System.Text.Json.Serialization;
@using Newtonsoft.Json.Linq;
<PageTitle>Library - Chart Test</PageTitle>
<div id="annotationsChartContainer"></div>

@code {
    public static Index? _instance;
    public Index() {
        _instance = this;
    }

    public async Task NonStaticMethod() {
        string jsonUrl = navigationManager.ToAbsoluteUri("stackedBar2D.json").ToString();
        await fusionChartsService.CallFusionChartsFunction("setChartDataUrl", "chartId", jsonUrl, "json");
		}
    
		[JSInvokable("loadJSON")]
    public static async Task loadJSON() {
         await _instance.NonStaticMethod();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender) {
        if (firstRender) {
            await annotationsChart();
        }
    }

    private async Task annotationsChart() {
        dynamic myChartConfig = new System.Dynamic.ExpandoObject();
        dynamic myEvent = new System.Dynamic.ExpandoObject();

        myChartConfig.id = "chartId";
        myChartConfig.type = "stackedbar2d";
        myChartConfig.width = "100%";
        myChartConfig.height = "100%";
        myChartConfig.dataFormat = "jsonurl";
        myChartConfig.renderAt = "annotationsChartContainer";

        myEvent.loaded = "function() { DotNet.invokeMethodAsync('BlazorFusionCharts','loadJSON'); }";
        myChartConfig.events = myEvent;

        String chartConfig = System.Text.Json.JsonSerializer.Serialize(myChartConfig);
        await fusionChartsService.renderChart(chartConfig);
    }
}