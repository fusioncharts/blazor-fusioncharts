<Project Sdk="Microsoft.NET.Sdk.Web">
	<PropertyGroup>
		<TargetFramework>net7.0</TargetFramework>
		<PackageId>BlazorFusionCharts</PackageId>
		<AssemblyName>BlazorFusionCharts</AssemblyName>
		<PackageVersion>1.0.0</PackageVersion>
		<Authors>FusionCharts</Authors>
		<Company>FusionCharts by Idera</Company>
		<Product>FusionCharts</Product>
		<NeutralLanguage>en</NeutralLanguage>
		<Description>BlazorFusionCharts library enables developers to seamlessly integrate FusionCharts into Blazor applications. FusionCharts is a comprehensive JavaScript charting library, and this Blazor wrapper facilitates the usage of FusionCharts within the Blazor framework. 
		
		With Blazor FusionCharts, developers can leverage the power of FusionCharts to create interactive and visually appealing charts, graphs, and dashboards in their Blazor applications. The library provides a set of components and utilities that make it easy to work with FusionCharts, allowing developers to bind data, customize appearance, and handle events in a Blazor-friendly manner.

		The README file includes instructions on how to install the library, configure FusionCharts in a Blazor project, and use various features provided by the library. Developers can refer to the documentation and examples in the github repo to quickly get started with integrating FusionCharts into their Blazor applications and enhance the data visualization capabilities of their web projects.</Description>
		<Copyright>Copyright © 2023</Copyright>
		<PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
		<PackageProjectUrl>https://www.fusioncharts.com/</PackageProjectUrl>
		<PackageIcon>icon.jpg</PackageIcon>
		<RepositoryType>git</RepositoryType>
		<RepositoryUrl>https://github.com/fusioncharts/blazor-fusioncharts</RepositoryUrl>
		<PackageReadmeFile>README.md</PackageReadmeFile>
		<PackageTags>FusionCharts Charts Visualization Dashboard Charting Interactive Graphs Analytics Infographics Reporting Diagrams Plotting DataViz Trends TimeSeries DataView Heatmap Plot</PackageTags>
		<PackageReleaseNotes>
			We are excited to announce the release of FusionCharts Blazor Integration version 1.0.0, marking a significant milestone in empowering Blazor developers with seamless charting capabilities. This integration allows for the rendering of a diverse range of charts, aligning with the extensive chart types available on the www.fusioncharts.com website.

		Key Features
			Chart Variety: Enjoy the flexibility of rendering all types of charts offered by FusionCharts. From basic line charts to complex statistical and advanced charts, this integration covers the spectrum.
			FusionCharts Version Support: The plugin is designed to seamlessly support FusionCharts versions 3.19, 3.20, 3.21, and 3.22. This ensures compatibility with a wide range of FusionCharts features and enhancements.
			Flexible Deployment: Users have the freedom to choose between using a locally bundled FusionCharts JavaScript library or opting for the convenience of a CDN-hosted version. This flexibility allows for efficient customization based on project requirements.

    Extended Component Support
			FusionTime: Leverage timeseries charts for dynamic and time-bound data representation.
			FusionWidgets: Explore gauges and real-time charts to display data in a visually engaging manner.
			PowerCharts: Unlock the potential of statistical and advanced charts for in-depth data analysis.
			FusionMaps: Visualize data geographically with choropleth geo maps.

		We are committed to providing an exceptional user experience, and we look forward to your feedback as we continue to enhance and expand FusionCharts Blazor Integration in future releases.
		</PackageReleaseNotes>
		<Nullable>enable</Nullable>
		<ImplicitUsings>enable</ImplicitUsings>
		<isPackable>true</isPackable>
		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
	</PropertyGroup>

	<PropertyGroup Condition=" '$(RunConfiguration)' == 'https' " />
	<PropertyGroup Condition=" '$(RunConfiguration)' == 'http' " />

	<ItemGroup>
		<Folder Include="Data\" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="coverlet.collector" Version="6.0.0">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.7.2" />
		<PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
		<PackageReference Include="xunit" Version="2.5.0" />
		<PackageReference Include="xunit.runner.visualstudio" Version="2.5.0">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<None Include="README.md" Pack="true" PackagePath="\"/>
		<None Include="LICENSE.txt" Pack="true" PackagePath="\"/>
		<None Include="icon.jpg" Pack="true" PackagePath=""/>
	</ItemGroup>
</Project>
