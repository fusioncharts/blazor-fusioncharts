@page "/"
@using Microsoft.JSInterop;
@using System.Text.Json;
@inject IJSRuntime JSInterop;
@inject FusionChartsService xyz;
@using System.Net.Http;
@inject HttpClient httpClient;
@inject NavigationManager navigationManager;
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager
@using System.Text.Json.Serialization;
@using Newtonsoft.Json.Linq;
<PageTitle>Index</PageTitle>
<h1>Hello, World!</h1>
<h2>1. Demo Chart </h2>
<div id="chartContainer1"></div>
<div id="annotationsChartContainer"></div>
<button @onclick = "callDispose">Dispose</button>
Welcome.
@code {
    protected override async Task OnAfterRenderAsync(bool
    firstRender)
    {
        if (firstRender)
        {
            await annotationsChart();
        }
        else
        {
        }
    }

    private async Task annotationsChart(){

        dynamic myChartConfig = new System.Dynamic.ExpandoObject();

        dynamic myChart = new System.Dynamic.ExpandoObject();
        dynamic myEvent = new System.Dynamic.ExpandoObject();

        myChartConfig.id = "demoId";
        myChartConfig.type = "stackedbar2d";
        myChartConfig.width = "100%";
        myChartConfig.height = "100%";
        myChartConfig.dataFormat = "jsonurl";
        myChartConfig.renderAt = "annotationsChartContainer";

        myEvent.dataPlotClick = "function() {DotNet.invokeMethodAsync('BlazorApp2TestQA2', 'ChangeData')}";
        myEvent.beforeDispose = "function(e) { console.log(e); e.preventDefault() }"; 
        myEvent.disposeCancelled = "function() { console.log('dispose cancelled') }";
        myChart.exportEnabled = "1";
        myChartConfig.events = myEvent;
        String chartConfig = System.Text.Json.JsonSerializer.Serialize(myChartConfig);
        string jsonUrl = navigationManager.ToAbsoluteUri("stackedBar2D.json").ToString();
        dynamic myDataSource = jsonUrl;

        await xyz.renderChart(chartConfig);
        await xyz.CallFusionChartsFunction("setJSONUrl", "demoId", jsonUrl);
    }

    private async Task callDispose(){
        await xyz.CallFusionChartsFunction("dispose", "demoId");
    }
}
<SurveyPrompt Title="How is Blazor working for you?" />