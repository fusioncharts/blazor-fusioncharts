@page "/dragnode"

@using System.Net.Http;
@inject HttpClient httpClient;
@inject NavigationManager navigationManager;
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager
@inject FusionChartsService fusionChartsService;

<PageTitle>Dragnode Chart</PageTitle>

<div>
    <div id="dragnodechart"></div>
</div>

@code{
    public async Task dragnodechart()
    {
        // chart code
        dynamic myChartConfig = new System.Dynamic.ExpandoObject();
        dynamic myDataSource = new System.Dynamic.ExpandoObject();
        dynamic myChart = new System.Dynamic.ExpandoObject();

        dynamic dataset = new System.Dynamic.ExpandoObject();
        dynamic data = new System.Dynamic.ExpandoObject();
        dynamic connectors = new System.Dynamic.ExpandoObject();

        dynamic myEvent = new System.Dynamic.ExpandoObject();
        //events
        myEvent.nodeAdded = "function() { console.log('nodeAdded')}";
        myEvent.nodeUpdated = "function() { console.log('nodeUpdated')}";
        myEvent.nodeDeleted = "function() { console.log('nodeDeleted')}";
        myEvent.connectorAdded = "function() { console.log('connectorAdded')}";
        myEvent.connectorUpdated = "function() { console.log('connectorUpdated')}";
        myEvent.connectorDeleted = "function() { console.log('connectorDeleted')}";
        myEvent.labelAdded = "function() { console.log('labelAdded')}";
        myEvent.labelDeleted = "function() { console.log('labelDeleted')}";
        myEvent.selectionRemoved = "function() { console.log('selectionRemoved')}";
        myEvent.selectionStart = "function() { console.log('selectionStart')}";
        myEvent.selectionEnd = "function() { console.log('selectionEnd')}";
        myEvent.labelClick = "function() { console.log('labelClick')}";
        myEvent.labelRollOver = "function() { console.log('labelRollOver')}";
        myEvent.labelRollOut = "function() { console.log('labelRollOut')}";
        myEvent.labelDragStart = "function() { console.log('labelDragStart')}";
        myEvent.labelDragEnd = "function() { console.log('labelDragEnd')}";

        myChartConfig.id = "dragnode";
        myChartConfig.type = "dragnode";
        myChartConfig.width = 1000;
        myChartConfig.height = 600;
        myChartConfig.renderAt = "dragnodechart";

        myChart.caption = "US Subway Map";
        myChart.xaxisminvalue = "0";
        myChart.is3d = "0";
        myChart.showformbtn = "1";
        myChart.formaction = "resources/php/chart-guide-drag-node-chart-introduction-update.php";
        myChart.formtarget = "_blank";
        myChart.formmethod = "POST";
        myChart.formbtntitle = "Save";
        myChart.viewmode = "0";
        myChart.showplotborder = "1";
        myChart.plotborderthickness = "4";
        myChart.theme = "fusion";
        myChart.showcanvasborder = "1";
        myChart.canvasborderalpha = "20";
        myChart.animation = "0";

        dataset.data = new[]
        {
            new { id = "01", label = "Santa Monica", color = "#ffffff", x= "16", y = "54", radius = "30", shape = "circle"},
            new { id = "02", label = "Los Angeles", color = "#ffffff", x= "27", y = "54", radius = "30", shape = "circle"},
            new { id = "03", label = "Ontario", color = "#ffffff", x= "48", y = "54", radius = "30", shape = "circle"},
            new { id = "04", label = "Phoenix", color = "#ffffff", x= "85", y = "54", radius = "30", shape = "circle"},
            new { id = "05", label = "Flagstaff", color = "#ffffff", x= "85", y = "80", radius = "30", shape = "circle"},
            new { id = "06", label = "Barstow", color = "#ffffff", x= "62", y = "80", radius = "30", shape = "circle"},
            new { id = "07", label = "San Diego", color = "#ffffff", x= "35", y = "30", radius = "30", shape = "circle"},
            new { id = "08", label = "San Ysidro", color = "#ffffff", x= "42", y = "12", radius = "30", shape = "circle"},
            new { id = "09", label = "Las Vegas", color = "#ffffff", x= "68", y = "93", radius = "30", shape = "circle"},
            new { id = "10", label = "", color = "#ffffff", x= "12", y = "98", radius = "0", shape = "circle"},
            new { id = "11", label = "", color = "#ffffff", x= "100", y = "80", radius = "0", shape = "circle"},
            new { id = "12", label = "", color = "#ffffff", x= "99", y = "40", radius = "0", shape = "circle"},
            new { id = "13", label = "Yuma", color = "#ffffff", x= "70", y = "30", radius = "30", shape = "circle"},
            new { id = "14", label = "", color = "#ffffff", x= "100", y = "30", radius = "0", shape = "circle"}
    };

        connectors.color = "#ffffff";
        connectors.stdthickness = "10";
        connectors.connector = new[]
        {
            new {strength = "2", from = "01", to = "02", color = "#fec110", arrowatstart = "0", arrowatend = "0" },
            new {strength = "2", from = "02", to = "03", color = "#fec110", arrowatstart = "0", arrowatend = "0" },
            new {strength = "2", from = "03", to = "04", color = "#fec110", arrowatstart = "0", arrowatend = "0" },
            new {strength = "2", from = "04", to = "12", color = "#fec110", arrowatstart = "0", arrowatend = "0" },
            new {strength = "2", from = "04", to = "05", color = "#a6aaad", arrowatstart = "0", arrowatend = "0" },
            new {strength = "2", from = "09", to = "06", color = "#0178bc", arrowatstart = "0", arrowatend = "0" },
            new {strength = "2", from = "06", to = "03", color = "#0178bc", arrowatstart = "0", arrowatend = "0" },
            new {strength = "2", from = "05", to = "06", color = "#0178bc", arrowatstart = "0", arrowatend = "0" },
            new {strength = "2", from = "05", to = "06", color = "#f1277d", arrowatstart = "0", arrowatend = "0" },
            new {strength = "2", from = "06", to = "11", color = "#f1277d", arrowatstart = "0", arrowatend = "0" },
            new {strength = "2", from = "02", to = "07", color = "#c1c733", arrowatstart = "0", arrowatend = "0" },
            new {strength = "2", from = "07", to = "08", color = "#c1c733", arrowatstart = "0", arrowatend = "0" },
            new {strength = "2", from = "02", to = "10", color = "#c1c733", arrowatstart = "0", arrowatend = "0" },
            new {strength = "2", from = "07", to = "13", color = "#6d6e70", arrowatstart = "0", arrowatend = "0" },
            new {strength = "2", from = "13", to = "14", color = "#6d6e70", arrowatstart = "0", arrowatend = "0" }
    };

        myChartConfig.events = myEvent;
        myDataSource.chart = myChart;
        myDataSource.dataset = new[] { dataset };
        myDataSource.connectors = new[] { connectors };

        //myChartConfig.events = myEvent;
        myChartConfig.dataSource = myDataSource;
        String chartConfig = System.Text.Json.JsonSerializer.Serialize(myChartConfig);
        await fusionChartsService.renderChart(chartConfig);

        //await fusionChartsService.CallFusionChartsFunction("resizeTo", "dragnode", "500", "500");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await dragnodechart();
        }
        else
        {

        }
    }

}