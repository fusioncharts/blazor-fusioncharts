@page "/basic"
@using Microsoft.JSInterop;

@inject FusionChartsService fusionChartsService;

<PageTitle>Index</PageTitle>

<h2>2. CHART LISTENERS</h2>
<div>
    <div id="chartContainer2"></div>
</div>
<input type="radio" id="bar2D" name="radio_group" value="bar2D" @onchange="radioSelection">
<label for="bar2D">bar2D</label>
<br>
<input type="radio" id="css" name="radio_group" value="Line" @onchange="radioSelection">
<label for="Line">Line</label>
<br>
<input type="radio" id="pie3D" name="radio_group" value="pie3D" @onchange="radioSelection">
<label for="pie3D">pie3D</label>
<br />
<button onclick="@destroyChart">Destroy Chart</button>
<button onclick="@changeChartData">Change Chart Data</button>
<button onclick="@obtainChartData">Get Chart Data</button>
<button onclick="@changeChartAttribute">Change Chart Attribute (Caption) </button>
<button onclick="@obtainChartAttribute">Get Chart Attribute (Width) </button>


<h2>3. MAPS</h2>
<div>
    <div id="chartContainer3"></div>
</div>
<h2>4. TIME CHART</h2>
<div>
    <div id="chartContainer4"></div>
</div>
<h2>5. MULTI SERIES</h2>
<div>
    <div id="chartContainer5"></div>
</div>
<h2>6. Stacked Column 3D</h2>
<div>
    <div id="chartContainer6"></div>
</div>
<h2>7. Stacked Column AND LINE</h2>
<div>
    <div id="chartContainer7"></div>
</div>

Welcome to your new app.
@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await fusionChartsService.activateLicense("LICENSE_KEY");
            await renderColumnCharts();
            await renderTimeCharts();
            await renderMap();
            await renderMSLine();
            await renderStackedColumnChart();
            await stackedColumnlineChart();
        }
        else
        {

        }
    }
    private async Task renderColumnCharts()
    {
        dynamic myChartConfig = new System.Dynamic.ExpandoObject();
        dynamic myDataSource = new System.Dynamic.ExpandoObject();
        dynamic myChart = new System.Dynamic.ExpandoObject();
        dynamic myEvent = new System.Dynamic.ExpandoObject();

        myChartConfig.type = "column2D";
        myChartConfig.width = 1000;
        myChartConfig.height = 600;
        myChartConfig.dataFormat = "json";
        myChartConfig.renderAt = "chartContainer1";

        myChart.caption = "Monthly Sales";
        myChart.subCaption = "Last year";
        myChart.xAxisName = "Month";
        myChart.yAxisName = "Sales (in USD)";
        myChart.theme = "fusion";

        myDataSource.data = new[] {
            new { label = "X0", value = "380000" },
            new { label = "X1", value = "340000" },
            new { label = "X2", value = "740000" },
            new { label = "X3", value = "800000" },
            new { label = "X4", value = "400000" },
            new { label = "X5", value = "620000" },
            new { label = "X6", value = "870000" },
            new { label = "X7", value = "60000" },
            new { label = "X8", value = "720000" },
            new { label = "X9", value = "10000" },
            new { label = "X10", value = "40000" },
            new { label = "X11", value = "390000" },
            new { label = "X12", value = "420000" },
            new { label = "X13", value = "500000" },
            new { label = "X14", value = "690000" },
            new { label = "X15", value = "200000" },
            new { label = "X16", value = "240000" },
            new { label = "X17", value = "640000" },
            new { label = "X18", value = "820000" },
            new { label = "X19", value = "910000" },
            new { label = "X20", value = "600000" },
            new { label = "X21", value = "720000" },
            new { label = "X22", value = "30000" },
            new { label = "X23", value = "800000" },
            new { label = "X24", value = "100000" },
            new { label = "X25", value = "820000" },
            new { label = "X26", value = "800000" },
            new { label = "X27", value = "580000" },
            new { label = "X28", value = "940000" },
            new { label = "X29", value = "140000" },
            new { label = "X30", value = "840000" },
            new { label = "X31", value = "170000" },
            new { label = "X32", value = "820000" },
            new { label = "X33", value = "110000" },
            new { label = "X34", value = "70000" },
            new { label = "X35", value = "30000" },
            new { label = "X36", value = "160000" },
            new { label = "X37", value = "30000" },
            new { label = "X38", value = "50000" },
            new { label = "X39", value = "30000" },
            new { label = "X40", value = "660000" },
            new { label = "X41", value = "310000" },
            new { label = "X42", value = "410000" },
            new { label = "X43", value = "270000" },
            new { label = "X44", value = "860000" },
            new { label = "X45", value = "260000" },
            new { label = "X46", value = "540000" },
            new { label = "X47", value = "510000" },
            new { label = "X48", value = "610000" },
            new { label = "X49", value = "800000" },
            new { label = "X50", value = "310000" },
            new { label = "X51", value = "780000" },
            new { label = "X52", value = "570000" },
            new { label = "X53", value = "820000" },
            new { label = "X54", value = "880000" },
            new { label = "X55", value = "510000" },
            new { label = "X56", value = "690000" },
            new { label = "X57", value = "780000" },
            new { label = "X58", value = "970000" },
            new { label = "X59", value = "210000" },
            new { label = "X60", value = "990000" },
            new { label = "X61", value = "240000" },
            new { label = "X62", value = "50000" },
            new { label = "X63", value = "990000" },
            new { label = "X64", value = "730000" },
            new { label = "X65", value = "110000" },
            new { label = "X66", value = "960000" },
            new { label = "X67", value = "620000" },
            new { label = "X68", value = "550000" },
            new { label = "X69", value = "290000" },
            new { label = "X70", value = "550000" },
            new { label = "X71", value = "370000" },
            new { label = "X72", value = "890000" },
            new { label = "X73", value = "810000" },
            new { label = "X74", value = "740000" },
            new { label = "X75", value = "400000" },
            new { label = "X76", value = "210000" },
            new { label = "X77", value = "930000" },
            new { label = "X78", value = "100000" },
            new { label = "X79", value = "500000" },
            new { label = "X80", value = "240000" },
            new { label = "X81", value = "590000" },
            new { label = "X82", value = "890000" },
            new { label = "X83", value = "340000" },
            new { label = "X84", value = "180000" },
            new { label = "X85", value = "950000" },
            new { label = "X86", value = "20000" },
            new { label = "X87", value = "860000" },
            new { label = "X88", value = "300000" },
            new { label = "X89", value = "70000" },
            new { label = "X90", value = "300000" },
            new { label = "X91", value = "10000" },
            new { label = "X92", value = "780000" },
            new { label = "X93", value = "780000" },
            new { label = "X94", value = "470000" },
            new { label = "X95", value = "330000" },
            new { label = "X96", value = "590000" },
            new { label = "X97", value = "150000" },
            new { label = "X98", value = "100000" },
            new { label = "X99", value = "890000" },
            new { label = "X100", value = "970000" },
            new { label = "X101", value = "850000" },
            new { label = "X102", value = "20000" },
            new { label = "X103", value = "770000" },
            new { label = "X104", value = "100000" },
            new { label = "X105", value = "240000" },
            new { label = "X106", value = "780000" },
            new { label = "X107", value = "410000" },
            new { label = "X108", value = "840000" },
            new { label = "X109", value = "50000" },
            new { label = "X110", value = "850000" },
            new { label = "X111", value = "710000" },
            new { label = "X112", value = "40000" },
            new { label = "X113", value = "280000" },
            new { label = "X114", value = "240000" },
            new { label = "X115", value = "360000" },
            new { label = "X116", value = "530000" },
            new { label = "X117", value = "10000" },
            new { label = "X118", value = "490000" },
            new { label = "X119", value = "580000" },
            new { label = "X120", value = "930000" },
            new { label = "X121", value = "360000" },
            new { label = "X122", value = "550000" },
            new { label = "X123", value = "910000" },
            new { label = "X124", value = "570000" },
            new { label = "X125", value = "450000" },
            new { label = "X126", value = "350000" },
            new { label = "X127", value = "850000" },
            new { label = "X128", value = "630000" },
            new { label = "X129", value = "480000" },
            new { label = "X130", value = "300000" },
            new { label = "X131", value = "230000" },
            new { label = "X132", value = "860000" },
            new { label = "X133", value = "160000" },
            new { label = "X134", value = "910000" },
            new { label = "X135", value = "710000" },
            new { label = "X136", value = "300000" },
            new { label = "X137", value = "770000" },
            new { label = "X138", value = "760000" },
            new { label = "X139", value = "370000" },
            new { label = "X140", value = "130000" },
            new { label = "X141", value = "880000" },
            new { label = "X142", value = "700000" },
            new { label = "X143", value = "140000" },
            new { label = "X144", value = "240000" },
            new { label = "X145", value = "870000" },
            new { label = "X146", value = "170000" },
            new { label = "X147", value = "700000" },
            new { label = "X148", value = "490000" },
            new { label = "X149", value = "690000" },
            new { label = "X150", value = "150000" },
            new { label = "X151", value = "340000" },
            new { label = "X152", value = "340000" },
            new { label = "X153", value = "540000" },
            new { label = "X154", value = "440000" },
            new { label = "X155", value = "510000" },
            new { label = "X156", value = "560000" },
            new { label = "X157", value = "910000" },
            new { label = "X158", value = "620000" },
            new { label = "X159", value = "260000" },
            new { label = "X160", value = "0" },
            new { label = "X161", value = "870000" },
            new { label = "X162", value = "510000" },
            new { label = "X163", value = "750000" },
            new { label = "X164", value = "580000" },
            new { label = "X165", value = "30000" },
            new { label = "X166", value = "770000" },
            new { label = "X167", value = "960000" },
            new { label = "X168", value = "780000" },
            new { label = "X169", value = "430000" },
            new { label = "X170", value = "270000" },
            new { label = "X171", value = "560000" },
            new { label = "X172", value = "640000" },
            new { label = "X173", value = "900000" },
            new { label = "X174", value = "200000" },
            new { label = "X175", value = "560000" },
            new { label = "X176", value = "370000" },
            new { label = "X177", value = "120000" },
            new { label = "X178", value = "620000" },
            new { label = "X179", value = "370000" },
            new { label = "X180", value = "580000" },
            new { label = "X181", value = "150000" },
            new { label = "X182", value = "460000" },
            new { label = "X183", value = "450000" },
            new { label = "X184", value = "590000" },
            new { label = "X185", value = "650000" },
            new { label = "X186", value = "390000" },
            new { label = "X187", value = "610000" },
            new { label = "X188", value = "150000" },
            new { label = "X189", value = "540000" },
            new { label = "X190", value = "300000" },
            new { label = "X191", value = "140000" },
            new { label = "X192", value = "350000" },
            new { label = "X193", value = "910000" },
            new { label = "X194", value = "860000" },
            new { label = "X195", value = "680000" },
            new { label = "X196", value = "880000" },
            new { label = "X197", value = "120000" },
            new { label = "X198", value = "490000" },
            new { label = "X199", value = "210000" },
    };
        myDataSource.chart = myChart;
        myChartConfig.dataSource = myDataSource;

        String chartConfig = System.Text.Json.JsonSerializer.Serialize(myChartConfig);
        await fusionChartsService.renderChart(chartConfig);

        /* ------------------------ LISTENERS -------------------------*/
        myChartConfig.type = "column3D";
        myChartConfig.renderAt = "chartContainer2";
        myChartConfig.id = "CHART_ID";

        myEvent.dataPlotClick = "function() { console.log('dataPlotClick')}";
        myEvent.initialized = "function() { console.log('initialized')}";
        myEvent.beforeRender = "function() { console.log('beforeRender')}";
        myEvent.rendered = "function() { console.log('rendered')}";

        myEvent.dataplotRollOver = "function() { console.log('dataplotRollOver')}";
        myEvent.dataplotRollOut = "function() { console.log('dataplotRollOut')}";
        myEvent.dataLabelClick = "function() { console.log('dataLabelClick')}";
        myEvent.dataLabelRollOver = "function() { console.log('dataLabelRollOver')}";

        myEvent.dataLabelRollOut = "function() { console.log('dataLabelRollOut')}";
        myEvent.legendItemClicked = "function() { console.log('legendItemClicked')}";
        myEvent.legendItemRollOver = "function() { console.log('legendItemRollOver')}";
        myEvent.legendItemRollOut = "function() { console.log('legendItemRollOut')}";

        myEvent.chartClick = "function() { console.log('chartClick')}";
        myEvent.chartRollOver = "function() { console.log('chartRollOver')}";
        myEvent.chartRollOut = "function() { console.log('chartRollOut')}";
        myEvent.keyPressed = "function() { console.log('keyPressed')}";



        myChartConfig.events = myEvent;
        myDataSource.data = new[] {
            new { label = "X0", value = "380000" },
            new { label = "X1", value = "340000" },
            new { label = "X2", value = "740000" },
            new { label = "X3", value = "800000" },
            new { label = "X4", value = "400000" },
            new { label = "X5", value = "620000" },
            new { label = "X6", value = "870000" },
            new { label = "X7", value = "60000" },
            new { label = "X8", value = "720000" },
            new { label = "X9", value = "10000" }
    };
        chartConfig = System.Text.Json.JsonSerializer.Serialize(myChartConfig);
        await fusionChartsService.renderChart(chartConfig);
    }
    private async Task renderTimeCharts()
    {
        dynamic myChartConfig = new System.Dynamic.ExpandoObject();
        dynamic myDataSource = new System.Dynamic.ExpandoObject();

        dynamic myChart = new System.Dynamic.ExpandoObject();
        dynamic myEvent = new System.Dynamic.ExpandoObject();
        dynamic myCategories = new System.Dynamic.ExpandoObject();
        dynamic myDataSet = new System.Dynamic.ExpandoObject();

        myChartConfig.id = "stockRealTimeChart";
        myChartConfig.type = "realtimeline";
        myChartConfig.renderAt = "chartContainer4";
        myChartConfig.width = 700;
        myChartConfig.height = 400;
        myChartConfig.dataFormat = "json";


        myChart.caption = "Real-time stock price monitor";
        myChart.subCaption = "Harry's SuperMart";
        myChart.xAxisName = "Time";
        myChart.yAxisName = "Stock Price";
        myChart.refreshinterval = 1;
        myChart.yaxisminvalue = 35;
        myChart.yaxismaxvalue = 36;
        myChart.numdisplaysets = 10;
        myChart.labeldisplay = "rotate";
        myChart.showRealTimeValue = 0;
        myChart.theme = "fusion";

        myCategories = new[] { new { catagory = new[] { new { label = "Day Start" } } } };

        myEvent.initialized = "function() { updateTimeChartData() }";
        myDataSource.chart = myChart;
        myDataSource.dataset = new[] { new { data = new[] { new { value = "35.3" } } } };
        //myDataSource.categories = myCategories;
        myChartConfig.dataSource = myDataSource;
        myChartConfig.events = myEvent;

        String chartConfig = System.Text.Json.JsonSerializer.Serialize(myChartConfig);
        await fusionChartsService.renderChart(chartConfig);


    }
    private async Task renderMap()
    {
        dynamic myChartConfig = new System.Dynamic.ExpandoObject();
        dynamic myDataSource = new System.Dynamic.ExpandoObject();
        dynamic myChart = new System.Dynamic.ExpandoObject();
        dynamic myColorRange = new System.Dynamic.ExpandoObject();
        dynamic colorRange1 = new System.Dynamic.ExpandoObject();
        dynamic colorRange2 = new System.Dynamic.ExpandoObject();


        myChartConfig.type = "world";
        myChartConfig.renderAt = "chartContainer3";
        myChartConfig.width = 800;
        myChartConfig.height = 550;
        myChartConfig.dataFormat = "json";

        myChart.caption = "Global Population";
        myChart.theme = "fusion";
        myChart.formatNumberScale = 0;
        myChart.numberSuffix = "M";

        colorRange1.minvalue = 0;
        colorRange1.maxvalue = 100;
        colorRange1.code = "#D0DFA3";
        colorRange1.displayValue = "<100M";

        colorRange2.minvalue = 100;
        colorRange2.maxvalue = 5000;
        colorRange2.code = "#B0BF92";
        colorRange2.displayValue = "100M - 5000M";

        myColorRange.color = new[] { colorRange1, colorRange2 };

        myDataSource.data = new[] { 
            new { id = "NA", value = "515" },  
            new { id = "SA", value = "37" },
            new { id = "AS", value = "101" },
            new { id = "EU", value = "200" },
            new { id = "AF", value = "42" },
            new { id = "AU", value = "400" }
    };
        myDataSource.chart = myChart;
        myDataSource.colorrange = myColorRange;
        myChartConfig.dataSource = myDataSource;

        String chartConfig = System.Text.Json.JsonSerializer.Serialize(myChartConfig);
        await fusionChartsService.renderChart(chartConfig);
    }
    private async Task renderMSLine()
    {
        dynamic myChartConfig = new System.Dynamic.ExpandoObject();
        dynamic myDataSource = new System.Dynamic.ExpandoObject();
        dynamic myChart = new System.Dynamic.ExpandoObject();

        dynamic catagory1 = new System.Dynamic.ExpandoObject();
        dynamic catagory2 = new System.Dynamic.ExpandoObject();
        dynamic catagory3 = new System.Dynamic.ExpandoObject();
        dynamic catagory4 = new System.Dynamic.ExpandoObject();
        dynamic catagory5 = new System.Dynamic.ExpandoObject();
        dynamic catagory6 = new System.Dynamic.ExpandoObject();
        dynamic catagory7 = new System.Dynamic.ExpandoObject();
        dynamic catagory8 = new System.Dynamic.ExpandoObject();

        dynamic dataset1 = new System.Dynamic.ExpandoObject();
        dynamic dataset2 = new System.Dynamic.ExpandoObject();

        dynamic value1 = new System.Dynamic.ExpandoObject();
        dynamic value2 = new System.Dynamic.ExpandoObject();
        dynamic value3 = new System.Dynamic.ExpandoObject();
        dynamic value4 = new System.Dynamic.ExpandoObject();
        dynamic value5 = new System.Dynamic.ExpandoObject();
        dynamic value6 = new System.Dynamic.ExpandoObject();
        dynamic value7 = new System.Dynamic.ExpandoObject();

        dynamic mytrendline = new System.Dynamic.ExpandoObject();

        myChart.caption = "Number of visitors last week";
        myChart.subCaption = "Bakersfield Central vs Los Angeles Topanga";
        myChart.xAxisName = "Day";
        myChart.theme = "fusion";

        myChartConfig.type = "msline";
        myChartConfig.renderAt = "chartContainer5";
        myChartConfig.width = 600;
        myChartConfig.height = 400;
        myChartConfig.dataFormat= "json";

        catagory1.label = "Mon";
        catagory2.label = "Tue";
        catagory3.label = "Wed";

        catagory4.vline = "true";
        catagory4.lineposition = 0;
        catagory4.color = "#6baa01";
        catagory4.labelHAlign = "center";
        catagory4.labelPosition = 0;
        catagory4.label = "National holiday";
        catagory4.dashed = 1;

        catagory5.label = "Thu";
        catagory6.label = "Fir";
        catagory7.label = "Sat";
        catagory8.label = "Sun";

        value1.value = 15123;
        value2.value = 14233;
        value3.value = 25507;
        value4.value = 9110;
        value5.value = 15529;
        value6.value = 20803;
        value7.value = 19202;

        dataset1.seriesname = "Bakersfield Central";;
        dataset1.data = new[] { value1, value2, value3, value4, value5, value6, value7 };

        dataset2.seriesname = "Los Angeles Topanga";
        dataset2.data = new[] { value5, value2, value4, value5, value5, value5, value2 };

        mytrendline = new[] { new { line = new[] { new { startvalue = 17022, color = "#6baa01", valueOnRight = 1, displayvalue = "Average" } } } };

        myDataSource.chart = myChart;
        myDataSource.categories = new[] { new { category = new[] { catagory1, catagory2, catagory3, catagory4, catagory5, catagory6, catagory7, catagory8 } } };
        myDataSource.dataset = new[] { dataset1, dataset2 };
        myDataSource.trendlines = new[] { mytrendline };
        myChartConfig.dataSource = myDataSource;

        String chartConfig = System.Text.Json.JsonSerializer.Serialize(myChartConfig);
        await fusionChartsService.renderChart(chartConfig);

    }
    private async Task renderStackedColumnChart()
    {
        dynamic myChartConfig = new System.Dynamic.ExpandoObject();
        dynamic myDataSource = new System.Dynamic.ExpandoObject();
        dynamic myChart = new System.Dynamic.ExpandoObject();

        dynamic catagory1 = new System.Dynamic.ExpandoObject();
        dynamic catagory2 = new System.Dynamic.ExpandoObject();
        dynamic catagory3 = new System.Dynamic.ExpandoObject();
        dynamic catagory4 = new System.Dynamic.ExpandoObject();
        dynamic catagory5 = new System.Dynamic.ExpandoObject();
        dynamic catagory6 = new System.Dynamic.ExpandoObject();
        dynamic catagory7 = new System.Dynamic.ExpandoObject();
        dynamic catagory8 = new System.Dynamic.ExpandoObject();

        dynamic dataset1 = new System.Dynamic.ExpandoObject();
        dynamic dataset2 = new System.Dynamic.ExpandoObject();

        dynamic value1 = new System.Dynamic.ExpandoObject();
        dynamic value2 = new System.Dynamic.ExpandoObject();
        dynamic value3 = new System.Dynamic.ExpandoObject();
        dynamic value4 = new System.Dynamic.ExpandoObject();
        dynamic value5 = new System.Dynamic.ExpandoObject();
        dynamic value6 = new System.Dynamic.ExpandoObject();
        dynamic value7 = new System.Dynamic.ExpandoObject();

        dynamic mytrendline = new System.Dynamic.ExpandoObject();

        myChart.caption = "Number of visitors last week";
        myChart.subCaption = "Bakersfield Central vs Los Angeles Topanga";
        myChart.xAxisName = "Day";
        myChart.theme = "fusion";

        myChartConfig.type = "stackedcolumn3d";
        myChartConfig.renderAt = "chartContainer6";
        myChartConfig.width = 600;
        myChartConfig.height = 400;
        myChartConfig.dataFormat = "json";

        catagory1.label = "Mon";
        catagory2.label = "Tue";
        catagory3.label = "Wed";

        catagory4.vline = "true";
        catagory4.lineposition = 0;
        catagory4.color = "#6baa01";
        catagory4.labelHAlign = "center";
        catagory4.labelPosition = 0;
        catagory4.label = "National holiday";
        catagory4.dashed = 1;

        catagory5.label = "Thu";
        catagory6.label = "Fir";
        catagory7.label = "Sat";
        catagory8.label = "Sun";

        value1.value = 15123;
        value2.value = 14233;
        value3.value = 25507;
        value4.value = 9110;
        value5.value = 15529;
        value6.value = 20803;
        value7.value = 19202;

        dataset1.seriesname = "Bakersfield Central"; ;
        dataset1.data = new[] { value4, value6, value3, value3, value6, value6, value7 };

        dataset2.seriesname = "Los Angeles Topanga";
        dataset2.data = new[] { value3, value5, value6, value2, value5, value3, value3 };

        mytrendline = new[] { new { line = new[] { new { startvalue = 17022, color = "#6baa01", valueOnRight = 1, displayvalue = "Average" } } } };

        myDataSource.chart = myChart;
        myDataSource.categories = new[] { new { category = new[] { catagory1, catagory2, catagory3, catagory4, catagory5, catagory6, catagory7, catagory8 } } };
        myDataSource.dataset = new[] { dataset1, dataset2 };
        // Uncomment the below line ot verify Trendlines 
        //myDataSource.trendlines = new[] { mytrendline };
        myChartConfig.dataSource = myDataSource;

        String chartConfig = System.Text.Json.JsonSerializer.Serialize(myChartConfig);
        await fusionChartsService.renderChart(chartConfig);
    }
    private async Task stackedColumnlineChart()
    {
        dynamic myChartConfig = new System.Dynamic.ExpandoObject();
        dynamic myDataSource = new System.Dynamic.ExpandoObject();
        dynamic myChart = new System.Dynamic.ExpandoObject();

        dynamic catagory1 = new System.Dynamic.ExpandoObject();
        dynamic catagory2 = new System.Dynamic.ExpandoObject();
        dynamic catagory3 = new System.Dynamic.ExpandoObject();
        dynamic catagory4 = new System.Dynamic.ExpandoObject();
        dynamic catagory5 = new System.Dynamic.ExpandoObject();
        dynamic catagory6 = new System.Dynamic.ExpandoObject();
        dynamic catagory7 = new System.Dynamic.ExpandoObject();
        dynamic catagory8 = new System.Dynamic.ExpandoObject();

        dynamic dataset1 = new System.Dynamic.ExpandoObject();
        dynamic dataset2 = new System.Dynamic.ExpandoObject();
        dynamic dataset3 = new System.Dynamic.ExpandoObject();

        dynamic value1 = new System.Dynamic.ExpandoObject();
        dynamic value2 = new System.Dynamic.ExpandoObject();
        dynamic value3 = new System.Dynamic.ExpandoObject();
        dynamic value4 = new System.Dynamic.ExpandoObject();
        dynamic value5 = new System.Dynamic.ExpandoObject();
        dynamic value6 = new System.Dynamic.ExpandoObject();
        dynamic value7 = new System.Dynamic.ExpandoObject();

        dynamic mytrendline = new System.Dynamic.ExpandoObject();

        myChart.caption = "Number of visitors last week";
        myChart.subCaption = "Bakersfield Central vs Los Angeles Topanga";
        myChart.xAxisName = "Day";
        myChart.theme = "fusion";

        myChartConfig.type = "stackedcolumn2dlinedy";
        myChartConfig.renderAt = "chartContainer7";
        myChartConfig.width = 600;
        myChartConfig.height = 400;
        myChartConfig.dataFormat = "json";

        catagory1.label = "Mon";
        catagory2.label = "Tue";
        catagory3.label = "Wed";

        catagory4.vline = "true";
        catagory4.lineposition = 0;
        catagory4.color = "#6baa01";
        catagory4.labelHAlign = "center";
        catagory4.labelPosition = 0;
        catagory4.label = "National holiday";
        catagory4.dashed = 1;

        catagory5.label = "Thu";
        catagory6.label = "Fir";
        catagory7.label = "Sat";
        catagory8.label = "Sun";

        value1.value = 15123;
        value2.value = 14233;
        value3.value = 25507;
        value4.value = 9110;
        value5.value = 15529;
        value6.value = 20803;
        value7.value = 19202;

        dataset1.seriesname = "Bakersfield Central"; ;
        dataset1.data = new[] { value2, value4, value3, value3, value1, value1, value7 };

        dataset2.seriesname = "Los Angeles Topanga";
        dataset2.data = new[] { value2, value2, value3, value4, value3, value6, value6 };

        dataset3.seriesname = "Los Angeles Topanga";
        dataset3.data = new[] { value4, value1, value4, value4, value4, value4, value3 };
        dataset3.renderas = "line";

        mytrendline = new[] { new { line = new[] { new { startvalue = 17022, color = "#6baa01", valueOnRight = 1, displayvalue = "Average" } } } };

        myDataSource.chart = myChart;
        myDataSource.categories = new[] { new { category = new[] { catagory1, catagory2, catagory3, catagory4, catagory5, catagory6, catagory7, catagory8 } } };
        myDataSource.dataset = new[] { dataset1, dataset2, dataset3 };
        // Uncomment the below line ot verify Trendlines
        myDataSource.trendlines = new[] { mytrendline };
        myChartConfig.dataSource = myDataSource;

        String chartConfig = System.Text.Json.JsonSerializer.Serialize(myChartConfig);
        await fusionChartsService.renderChart(chartConfig);
    }

    private async Task radioSelection(ChangeEventArgs args)
    {
        String newChartType = args.Value.ToString();
        await fusionChartsService.changeChartType("CHART_ID", newChartType);

    }
    private async Task destroyChart()
    {
        await fusionChartsService.destroyChart("CHART_ID");
    }
    private async Task changeChartData()
    {
        dynamic myDataSource = new System.Dynamic.ExpandoObject();
        myDataSource.data = new[] {
            new { label = "X0", value = "360000" },
            new { label = "X1", value = "410000" },
            new { label = "X2", value = "230000" },
            new { label = "X3", value = "430000" },
            new { label = "X4", value = "260000" },
            new { label = "X5", value = "210000" },
            new { label = "X6", value = "320000" },
            new { label = "X7", value = "42000" },
            new { label = "X8", value = "260000" },
            new { label = "X9", value = "43000" }
    };
        String serializedNewData = System.Text.Json.JsonSerializer.Serialize(myDataSource);
        await fusionChartsService.changeChartData("CHART_ID", serializedNewData, "json");
    }
    private async Task obtainChartData()
    {
        String result = await fusionChartsService.obtainChartData("CHART_ID");
    }
    private async Task changeChartAttribute()
    {
        await fusionChartsService.changeChartAttribute("CHART_ID", "caption", "New Chart Caption Changed");
    }
    private async Task obtainChartAttribute()
    {
        String axisName = await fusionChartsService.obtainChartAttribute("CHART_ID", "xAxisName");
    }
}
<SurveyPrompt Title="How is Blazor working for you?" />
