@page "/bubble"

<h1>Bubble Chart</h1>

<div id="bubble"></div>


@inject FusionChartsService fusionChartsService;

@code {
    public async Task demo()
    {
        //chart code
        dynamic myChartConfig = new System.Dynamic.ExpandoObject();
        dynamic myDataSource = new System.Dynamic.ExpandoObject();
        dynamic myChart = new System.Dynamic.ExpandoObject();
        dynamic myEvent = new System.Dynamic.ExpandoObject();
        dynamic categories = new System.Dynamic.ExpandoObject();
        myEvent.rendered = "function() { console.log('rendered successful')}";

        myChartConfig.type = "bubble";
        myChartConfig.width = 600;
        myChartConfig.height = 300;
        myChartConfig.dataFormat = "json";
        myChartConfig.renderAt = "bubble";

        myChart.caption = "Sales Analysis of Shoe Brands";
        myChart.subcaption = "Last Quarter";
        myChart.xAxisMinValue = "0";
        myChart.xAxisMaxValue = "100";
        myChart.yAxisMinValue = "0";
        myChart.yAxisMaxValue = "30000";
        myChart.plotFillAlpha = "70";
        myChart.plotFillHoverColor = "#6baa01";
        myChart.xAxisName = "Average Price";
        myChart.yAxisName = "Units Sold";
        myChart.numDivlines = "2";
        myChart.showValues = "1";
        myChart.plotTooltext = "$name : Profit Contribution - $zvalue%";
        myChart.drawQuadrant = "1";
        myChart.quadrantLineAlpha = "80";
        myChart.quadrantLineThickness = "3";
        myChart.quadrantXVal = "50";
        myChart.quadrantYVal = "15000";
        myChart.quadrantLabelTL = "Low Price / High Sale";
        myChart.quadrantLabelTR = "High Price / High Sale";
        myChart.quadrantLabelBL = "Low Price / Low Sale";
        myChart.quadrantLabelBR = "High Price / Low Sale";
        myChart.use3dlighting = "0";
        myChart.showAlternateHGridColor = "0";
        myChart.showAlternateVGridColor = "0";
        myChart.theme = "fusion";

        myDataSource.categories = new[]{
            new
                {
                category=new []
                    {
                    new {
                        label= "$0",
                        x= "0",
                        showverticalline= "0"
                    },
                    new {
                        label= "$20",
                        x= "20",
                        showverticalline= "1"
                    },
                    new {
                        label= "$40",
                        x= "40",
                        showverticalline= "1"
                    },
                    new {
                        label= "$60",
                        x= "60",
                        showverticalline= "1"
                    },
                    new {
                        label= "$80",
                        x= "80",
                        showverticalline= "1"
                    },
                    new {
                        label= "$100",
                        x= "100",
                        showverticalline= "1"
                    },

                }
            }
        };
       
        myDataSource.dataset = new[]{
            new{ color = "00aee4",
                data = new[]
                {
                    new
                    {
                        x = "80", y = "15000", z = "24", name = "Nike"

                    },new
                    {
                        x = "60", y = "18500", z = "26", name = "Adidas"

                    },new
                    {
                        x = "50", y = "19450", z = "19", name = "Puma"
                    },new
                    {
                        x = "65", y = "10500", z = "8", name = "Fila"
                    },new
                    {
                        x = "43", y = "8750", z = "5", name = "Lotto"
                    },new
                    {
                        x = "32", y = "22000", z = "10", name = "Reebok"
                    },new
                    {
                        x = "44", y = "13000", z = "9", name = "Woodland"
                    }
                 }
            }
        };

        myDataSource.trendlines = new[]{
            new{
                line = new[]
                {
                    new
                    {
                        startValue = "20000", endValue = "30000", isTrendZone = "1", color = "#aaaaaa", alpha = "14"

                    },new
                    {
                        startValue = "10000", endValue = "20000", isTrendZone = "1", color = "#aaaaaa", alpha = "7"

                    }
                 }
            }
        };

        myDataSource.vTrendlines = new[]{
            new{
                line = new[]
                {
                    new
                    {
                        startValue = "44", isTrendZone = "0", color = "#0066cc", thickness = "1", dashed = "1", displayValue = "Gross Avg."

                    }
                 }
            }
        };


        myDataSource.chart = myChart;
        myChartConfig.events = myEvent;
        myChartConfig.dataSource = myDataSource;

        myEvent.dataPlotClick = "function() { console.log('dataPlotClick')}";
        myEvent.initialized = "function() { console.log('initialized')}";
        myEvent.beforeRender = "function() { console.log('beforeRender')}";
        myEvent.rendered = "function() { console.log('rendered')}";

        myEvent.dataplotRollOver = "function() { console.log('dataplotRollOver')}";
        myEvent.dataplotRollOut = "function() { console.log('dataplotRollOut')}";
        myEvent.dataLabelClick = "function() { console.log('dataLabelClick')}";
        myEvent.dataLabelRollOver = "function() { console.log('dataLabelRollOver')}";

        myEvent.dataLabelRollOut = "function() { console.log('dataLabelRollOut')}";
        myEvent.legendItemClicked = "function() { console.log('legendItemClicked')}";
        myEvent.legendItemRollOver = "function() { console.log('legendItemRollOver')}";
        myEvent.legendItemRollOut = "function() { console.log('legendItemRollOut')}";

        myEvent.chartClick = "function() { console.log('chartClick')}";
        myEvent.chartRollOver = "function() { console.log('chartRollOver')}";
        myEvent.chartRollOut = "function() { console.log('chartRollOut')}";
        myEvent.keyPressed = "function() { console.log('keyPressed')}";

        String chartConfig = System.Text.Json.JsonSerializer.Serialize(myChartConfig);
        await fusionChartsService.renderChart(chartConfig);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await demo();
        }
        else
        {

        }
    }

}