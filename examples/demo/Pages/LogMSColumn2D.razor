@page "/LogMSColumn2D"

<h1>Logarithmic Column 2D Chart </h1>

<div id="LogMSColumn2D"></div>


@inject FusionChartsService fusionChartsService;

@code {
    public async Task demo()
    {
        //chart code
        dynamic myChartConfig = new System.Dynamic.ExpandoObject();
        dynamic myDataSource = new System.Dynamic.ExpandoObject();
        dynamic myChart = new System.Dynamic.ExpandoObject();
        dynamic myEvent = new System.Dynamic.ExpandoObject();
        dynamic categories = new System.Dynamic.ExpandoObject();
        myEvent.rendered = "function() { console.log('rendered successful')}";

        myChartConfig.type = "LogMSColumn2D";
        myChartConfig.width = 600;
        myChartConfig.height = 300;
        myChartConfig.dataFormat = "json";
        myChartConfig.renderAt = "LogMSColumn2D";

        myChart.caption = "Store footfall vs Online visitors ";
        myChart.subCaption = "Last Year";
        myChart.xAxisName = "Quarter";
        myChart.yAxisName = "No of visitors";
        //myChart.base = "10";
        myChart.theme = "fusion";

        myDataSource.categories = new[]{
            new
                {
                category=new[] {
                    new { label = "Q1" },
                    new { label = "Q2" },
                    new { label = "Q3" },
                    new { label = "Q4" },
                }
            }
    };

        myDataSource.data = new[] {
            new { label = "Mon", value = "4123" },
            new { label = "Tue", value = "5491" },
            new { label = "Wed", value = "4591" },
            new { label = "Thu", value = "1235" },
            new { label = "Fri", value = "4591" },
            new { label = "Sat", value = "5803" },
            new { label = "Sun", value = "3885" },
    };

        myDataSource.dataset = new[]{
            new {
                seriesname = "Total footfalls",
                data = new[] {
                    new { value = "126734" },
                    new { value = "159851" },
                    new { value = "197393" },
                    new { value = "168560" },
                    new { value = "199428" },
                }
            }, new {
                seriesname = "Online Visits",
                data = new[] {
                    new { value = "1126059" },
                    new { value = "1292145" },
                    new { value = "1496849" },
                    new { value = "1460249" },
                    new { value = "1083962" },
                }
            }
    };

        myDataSource.trendlines = new[]{
            new{
                line = new[]
                {
                    new
                    {
                        startvalue = "18500",
                        color = "#1aaf5d",
                        displayvalue = "Average{br}weekly{br}footfall",
                        valueOnRight = "1",
                        thickness = "2",
                    }
                 }
            }
    };

        myDataSource.chart = myChart;
        myChartConfig.events = myEvent;
        myChartConfig.dataSource = myDataSource;

        myEvent.dataPlotClick = "function() { console.log('dataPlotClick')}";
        myEvent.initialized = "function() { console.log('initialized')}";
        myEvent.beforeRender = "function() { console.log('beforeRender')}";
        myEvent.rendered = "function() { console.log('rendered')}";

        myEvent.dataplotRollOver = "function() { console.log('dataplotRollOver')}";
        myEvent.dataplotRollOut = "function() { console.log('dataplotRollOut')}";
        myEvent.dataLabelClick = "function() { console.log('dataLabelClick')}";
        myEvent.dataLabelRollOver = "function() { console.log('dataLabelRollOver')}";

        myEvent.dataLabelRollOut = "function() { console.log('dataLabelRollOut')}";
        myEvent.legendItemClicked = "function() { console.log('legendItemClicked')}";
        myEvent.legendItemRollOver = "function() { console.log('legendItemRollOver')}";
        myEvent.legendItemRollOut = "function() { console.log('legendItemRollOut')}";

        myEvent.chartClick = "function() { console.log('chartClick')}";
        myEvent.chartRollOver = "function() { console.log('chartRollOver')}";
        myEvent.chartRollOut = "function() { console.log('chartRollOut')}";
        myEvent.keyPressed = "function() { console.log('keyPressed')}";
        myEvent.dataplotDragStart = "function() { console.log('dataplotDragStart')}";
        myEvent.dataplotDragEnd = "function() { console.log('dataplotDragEnd')}";


        String chartConfig = System.Text.Json.JsonSerializer.Serialize(myChartConfig);
        await fusionChartsService.renderChart(chartConfig);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await demo();
        }
        else
        {

        }
    }

}