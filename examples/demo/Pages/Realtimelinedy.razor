@page "/realtimelinedy"

@using System.Net.Http;
@inject NavigationManager navigationManager;
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager
@inject FusionChartsService fusionChartsService;

<PageTitle>Real-time Line (Dual Y) chart</PageTitle>

<div>
    <div id="realtimelinedy"></div>
</div>

@code {

    public async Task demo()
    {
        // chart code
        dynamic myChartConfig = new System.Dynamic.ExpandoObject();
        dynamic myDataSource = new System.Dynamic.ExpandoObject();
        dynamic myChart = new System.Dynamic.ExpandoObject();
        dynamic myEvent = new System.Dynamic.ExpandoObject();

        //events
        myEvent.loaded = "function() { console.log('loaded')}";
        myEvent.renderComplete = "function() { console.log('renderComplete')}";
        myEvent.initialized = "function() { console.log('initialized')}";
        myEvent.beforeRender = "function() { console.log('beforeRender')}";
        myEvent.rendered = "function() { console.log('rendered')}";

        myEvent.dataPlotClick = "function() { console.log('dataPlotClick')}";
        myEvent.dataplotRollOver = "function() { console.log('dataplotRollOver')}";
        myEvent.dataplotRollOut = "function() { console.log('dataplotRollOut')}";
        myEvent.dataLabelClick = "function() { console.log('dataLabelClick')}";
        myEvent.dataLabelRollOver = "function() { console.log('dataLabelRollOver')}";
        myEvent.dataLabelRollOut = "function() { console.log('dataLabelRollOut')}";

        myEvent.legendItemClicked = "function() { console.log('legendItemClicked')}";
        myEvent.legendItemRollOver = "function() { console.log('legendItemRollOver')}";
        myEvent.legendItemRollOut = "function() { console.log('legendItemRollOut')}";

        myEvent.chartClick = "function() { console.log('chartClick')}";
        myEvent.chartRollOver = "function() { console.log('chartRollOver')}";
        myEvent.chartRollOut = "function() { console.log('chartRollOut')}";

        myChartConfig.type = "realtimelinedy";
        myChartConfig.width = 1000;
        myChartConfig.height = 600;
        myChartConfig.dataFormat = "json";
        myChartConfig.renderAt = "realtimelinedy";

        myChart.caption = "Stock Price Monitor";
        myChart.subCaption = "Harry's Supermart";
        myChart.showRealTimeValue = "0";
        myChart.numberprefix = "$";
        myChart.setadaptiveymin = "1";
        myChart.setadaptivesymin = "1";
        myChart.xaxisname = "Time";
        myChart.labeldisplay = "Rotate";
        myChart.slantlabels = "1";
        myChart.pyaxisminvalue = "35";
        myChart.pyaxismaxvalue = "36";
        myChart.syaxisminvalue = "10000";
        myChart.syaxismaxvalue = "12000";
        myChart.numDisplaySets = "10";
        myChart.theme = "fusion";

        myDataSource.categories = new[]{
            new
            {
                category = new[]
                {
                    new
                    {
                        label = "Day Start",
                    }
                }
            }

    };
        myDataSource.dataset = new[]{
            new
            {
                seriesname = "HRYS Price",
                showvalues = "0",
                parentyaxis = "",
                data = new[]
                {
                    new
                    {
                        value = "35.1"
                    }
                }
            }, new
            {
                seriesname = "NYSE Index",
                showvalues = "0",
                parentyaxis = "S",
                data = new[]
                {
                    new
                    {
                        value = "10962.871"
                    }
                }
            }

    };

        myDataSource.trendlines = new[]{
            new
            {
                line = new[]
                {
                    new
                    {
                        parentyaxis = "P",
                        startvalue = "35.1",
                        displayvalue = "Open",
                        thickness = "1",
                        color = "#0075c2",
                        dashed = "1"
                    }, new
                    {
                        parentyaxis = "S",
                        startvalue = "10962.87",
                        displayvalue = "Open",
                        thickness = "1",
                        color = "#1aaf5d",
                        dashed = "1"
                    }
                }
            }

    };

        myDataSource.chart = myChart;

        myChartConfig.events = myEvent;
        myChartConfig.dataSource = myDataSource;
        String chartConfig = System.Text.Json.JsonSerializer.Serialize(myChartConfig);
        await fusionChartsService.renderChart(chartConfig);

    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await demo();
        }
        else
        {

        }
    }

}