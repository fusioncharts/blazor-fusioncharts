@page "/GroupedStackedchart"
@inject FusionChartsService fusionChartsService;
<h3>Grouped Stacked chart</h3>
<div id="chart-container1"></div>

@code {
    public async Task GroupedStackedchart()
    {
        dynamic myChartConfig = new System.Dynamic.ExpandoObject();
        dynamic myDataSource = new System.Dynamic.ExpandoObject();
        dynamic myChart = new System.Dynamic.ExpandoObject();
        dynamic myEvent = new System.Dynamic.ExpandoObject();


        myChartConfig.type = "msstackedcolumn2d";
        myChartConfig.width = "100%";
        myChartConfig.height = "100%";
        myChartConfig.dataFormat = "json";
        myChartConfig.renderAt = "chart-container1";
        myChartConfig.id = "gsc";

        myChartConfig.events = myEvent;
        String chartConfig = System.Text.Json.JsonSerializer.Serialize(myChartConfig);
        await fusionChartsService.renderChart(chartConfig);


        await fusionChartsService.CallFusionChartsFunction("setChartData", "gsc", @"
    {
        ""chart"": {
            ""caption"": ""Break-up of Annual Revenue"",
            ""subcaption"": ""In Million $"",
            ""xaxisname"": ""Year"",
            ""yaxisname"": ""Sales in M$"",
            ""numberprefix"": ""$"",
            ""numbersuffix"": ""M"",
            ""showsum"": ""1"",
            ""plottooltext"": ""Revenue from <b>$seriesName</b> in $label was <b>$dataValue</b>"",
            ""theme"": ""candy""
        },
        ""categories"": [
            {
                ""category"": [
                    { ""label"": ""2011"" },
                    { ""label"": ""2012"" },
                    { ""label"": ""2013"" },
                    { ""label"": ""2016"" },
                    { ""label"": ""2017"" }
                ]
            }
        ],
        ""dataset"": [
            {
                ""dataset"": [
                    {
                        ""seriesname"": ""Developer libraries"",
                        ""data"": [
                            { ""value"": ""30"" },
                            { ""value"": ""26"" },
                            { ""value"": ""29"" },
                            { ""value"": ""31"" },
                            { ""value"": ""34"" }
                        ]
                    },
                    {
                        ""seriesname"": ""Business Tools"",
                        ""data"": [
                            { ""value"": ""21"" },
                            { ""value"": ""28"" },
                            { ""value"": ""39"" },
                            { ""value"": ""41"" },
                            { ""value"": ""24"" }
                        ]
                    }
                ]
            },
            {
                ""dataset"": [
                    {
                        ""seriesname"": ""Infrastructure Consulting"",
                        ""data"": [
                            { ""value"": ""27"" },
                            { ""value"": ""25"" },
                            { ""value"": ""28"" },
                            { ""value"": ""26"" },
                            { ""value"": ""10"" }
                        ]
                    },
                    {
                        ""seriesname"": ""Training"",
                        ""data"": [
                            { ""value"": ""17"" },
                            { ""value"": ""15"" },
                            { ""value"": ""18"" },
                            { ""value"": ""16"" },
                            { ""value"": ""10"" }
                        ]
                    },
                    {
                        ""seriesname"": ""AMC"",
                        ""data"": [
                            { ""value"": ""12"" },
                            { ""value"": ""17"" },
                            { ""value"": ""16"" },
                            { ""value"": ""15"" },
                            { ""value"": ""12"" }
                        ]
                    }
                ]
            }
        ]
    }", "json");

    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await GroupedStackedchart();
        }
        else
        {

        }
    }
}
